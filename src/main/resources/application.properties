spring.application.name=customer-management-mw
server.port=8100

logging.level.org.springframework.security=DEBUG

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/customerDB5
spring.datasource.username=postgres
spring.datasource.password=1234
spring.jpa.properties.javax.persistence.validation.mode = none
spring.jpa.show-sql=true

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

# Eureka client configs
# eureka.client.registry-fetch-interval-seconds: Seconds to fetch registed instance informations from Eureka server.
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.preferIpAddress=true
eureka.instance.lease-renewal-interval-in-seconds=20
eureka.client.registry-fetch-interval-seconds=30 
hystrix.command.default.enabled=false


# In that way, we set load balancer to active-passive balancing mode.
# spring.cloud.loadbalancer.configurations=same-instance-preference
# spring.cloud.loadbalancer.enabled=true

# Keep cache 10S then evict.
spring.cache.redis.time-to-live=10S
spring.boot.admin.auto-deregistration=true

# Configuration properties and constants

# backend base url
customer-management-backend.base-url = http://customer-management-backend/api

# SECRET_KEY for JWT token
SECRET_KEY = 66556A586E3272357538782F4125442A472D4B6150645367566B597033733676

# Redis properties
redis.hostname = 127.0.0.1
redis.port = 6379




